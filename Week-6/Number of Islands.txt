class Solution {
    public int numIslands(char[][] grid) {
        int n = grid.length;
        int m = grid[0].length;
        
        int cnt=0;
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(grid[i][j]=='1'){
                    dfs(grid,n,m,i,j);
                    cnt++;
                }
            }
        }
        
        return cnt;
    }
    
    void dfs(char arr[][], int n, int m, int x, int y){
        
        arr[x][y]='0';
        
        if(y+1<m && arr[x][y+1]=='1'){
            dfs(arr,n,m,x,y+1);
        }
        if(x+1<n && arr[x+1][y]=='1'){
            dfs(arr,n,m,x+1,y);
        }
        if(y-1>=0 && arr[x][y-1]=='1'){
            dfs(arr,n,m,x,y-1);
        }
        if(x-1>=0 && arr[x-1][y]=='1'){
            dfs(arr,n,m,x-1,y);
        }        
        
    }
}